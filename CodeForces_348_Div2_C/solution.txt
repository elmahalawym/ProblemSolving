import java.util.Scanner;

public class C {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		int n = scan.nextInt(), m = scan.nextInt(), q = scan.nextInt();
		Tile[][] original = new Tile[n][m];
		Tile[][] current = new Tile[n][m];
		for(int i=0;i<n;i++) {
			for(int j=0;j<m;j++) {
				current[i][j] = original[i][j] = new Tile(i,j,0);
			}
		}
		while(q --> 0) {
			int type = scan.nextInt();
			if(type == 1) {
				int r = scan.nextInt()-1;
				Tile left = current[r][0];
				for(int c=0;c<m-1;c++) {
					current[r][c] = current[r][c+1];
				}
				current[r][m-1] = left;
			} else if(type == 2) {
				int c = scan.nextInt()-1;
				Tile top = current[0][c];
				for(int r=0;r<n-1;r++) {
					current[r][c] = current[r+1][c];
				}
				current[n-1][c] = top;
			} else if(type == 3) {
				int r = scan.nextInt()-1, c = scan.nextInt()-1;
				current[r][c].val = scan.nextInt();
			}
		}
		for(int i=0;i<n;i++) {
			StringBuilder str = new StringBuilder();
			for(int j=0;j<m;j++) {
				str.append(original[i][j].val).append(" ");
			}
			System.out.println(str.toString().trim());
		}
	}
	static class Tile {
		int r,c;
		int val;
		public Tile(int r, int c, int val) {
			this.r = r;
			this.c = c;
			this.val = val;
			// TODO Auto-generated constructor stub
		}
		@Override
		public String toString() {
			return "[" + r + "," + c + "]";
		}

	}
}
â†’Judgement Protocol
Test: #1, time: 140 ms., memory: 20320 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
2 2 6
2 1
2 2
3 1 1 1
3 2 2 2
3 1 2 8
3 2 1 8
Output
8 2
1 8
Answer
8 2
1 8
Checker Log
ok Accepted!
Test: #2, time: 108 ms., memory: 20316 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
3 3 2
1 2
3 2 2 5
Output
0 0 0
0 0 5
0 0 0
Answer
0 0 0
0 0 5
0 0 0
Checker Log
ok Accepted!
Test: #3, time: 109 ms., memory: 20316 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
5 5 1
1 5
Output
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
Answer
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
Checker Log
ok Accepted!
Test: #4, time: 124 ms., memory: 20484 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
1 1 3
1 1
2 1
3 1 1 1000000000
Output
1000000000
Answer
1000000000
Checker Log
ok Accepted!
Test: #5, time: 140 ms., memory: 20320 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
1 1 3
1 1
2 1
3 1 1 -1000000000
Output
-1000000000
Answer
-1000000000
Checker Log
ok Accepted!
Test: #6, time: 171 ms., memory: 20368 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
100 100 10000
3 2 14 -203505407
3 82 29 -696293878
2 14
1 9
2 29
3 97 75 -801089442
1 4
3 92 77 -92928644
3 31 95 -905577910
2 3
1 25
2 76
3 30 51 -267607520
2 20
3 18 91 -713637699
2 71
2 80
1 87
2 83
1 79
2 42
2 58
2 91
2 63
3 6 53 347612347
2 10
3 81 44 64560496
1 58
1 62
2 70
2 1
3 85 27 -645399728
3 43 78 689469290
3 39 87 -691996700
2 29
1 19
2 97
1 43
3 24 50 -149662475
1 80
2 81
3 80 3 -320805132
2 88
3 82 41 2507946
2 3
3 59 35 -895581996
2 97
2 14
...
Output
-29409117 0 0 0 0 0 0 0 0 725653352 0 97426494 0 0 0 0 0 0 891000837 742931407 924093179 891068847 0 0 0 0 0 0 0 0 0 0 0 -987780984 0 0 248641939 173599020 -826669634 0 0 -903634773 0 0 0 0 0 0 0 0 0 0 0 0 896133403 0 0 213212920 0 0 0 0 0 0 474015496 0 0 0 -724775537 0 0 0 0 0 0 0 0 -369236300 -566296517 0 -567055544 0 -29045599 -693437600 551901908 0 0 0 0 -545567558 271028186 296629753 0 0 0 -290103219 0 233748566 0 0
0 0 0 599683980 0 0 824715393 0 0 -658489279 0 0 0 -203505407 0 -951064337 0 -4039486...
Answer
-29409117 0 0 0 0 0 0 0 0 725653352 0 97426494 0 0 0 0 0 0 891000837 742931407 924093179 891068847 0 0 0 0 0 0 0 0 0 0 0 -987780984 0 0 248641939 173599020 -826669634 0 0 -903634773 0 0 0 0 0 0 0 0 0 0 0 0 896133403 0 0 213212920 0 0 0 0 0 0 474015496 0 0 0 -724775537 0 0 0 0 0 0 0 0 -369236300 -566296517 0 -567055544 0 -29045599 -693437600 551901908 0 0 0 0 -545567558 271028186 296629753 0 0 0 -290103219 0 233748566 0 0
0 0 0 599683980 0 0 824715393 0 0 -658489279 0 0 0 -203505407 0 -951064337 0 -403948...
Checker Log
ok Accepted!

